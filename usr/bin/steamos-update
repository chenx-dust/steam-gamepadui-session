#! /bin/bash

# Support archlinux rolling upgrade.

# The Steam client is known to call this script with the following parameter combinations:
# steamos-update --supports-duplicate-detection     -- should do nothing
# steamos-update --enable-duplicate-detection check -- should check for update
# steamos-update check                              -- should check for update
# steamos-update --enable-duplicate-detection       -- should perform an update
# steamos-update                                    -- should perform an update

set -o pipefail

while [[ $# -gt 0 ]]; do
  case $1 in
    check)
      CHECK=1
      shift
      ;;
    --supports-duplicate-detection)
      EXIT=1
      shift
      ;;
    *)
      shift
      ;;
  esac
done

function clean_progress {
  local scale=$1
  local postfix=$2
  local last_value=$scale
  while IFS= read -r line; do
    value=$(( ${line}*100/${scale} ))
    if [ "$last_value" != "$value" ]; then
      echo ${value}${postfix}
      last_value=$value
    fi
  done
}

function check_for_updates {
  if ! pacman -Syy > /dev/null 2>&1; then
    exit $?
  fi

  TOTAL=$(pacman -Qu | wc -l)
  if [ $? -eq 0 ]; then
    printf "Upgrade:\u00a0%d\u00a0Packages\n" $TOTAL
    exit 0
  else
    exit 7 # tells Steam client there is no update to perform
  fi
}

function do_update {
  # pacman update
  TOTAL=$(pacman -Qu | wc -l)
  if [ $? -ne 0 ]; then
    exit 7 # no update available
  fi
  pacman -Syu --noconfirm 2>&1 | \
    grep --line-buffered -E 'downloading|upgrading' | \
    awk '{print ++count;fflush()}' | \
    clean_progress $((TOTAL * 2 + 3)) '%'
}

if [ -n "$CHECK" ]; then
  check_for_updates
elif [ -n "$EXIT" ]; then
  exit 0
else
  do_update
fi
